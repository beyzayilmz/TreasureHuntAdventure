/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package treasurehauntadventure;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ervas
 */
public class Scoreboard extends javax.swing.JFrame {

    /**
     * Creates new form Scoreboard
     */
    public Scoreboard() {
        initComponents();
        loadAllScores();

    }

    private void loadAllScores() {
        try (BufferedReader reader = new BufferedReader(new FileReader("score.txt"))) {
            StringBuilder allScores = new StringBuilder();
            allScores.append("Tüm Skorlar:\n");
            String line;
            while ((line = reader.readLine()) != null) {
                allScores.append(line).append("\n");
            }
            scoreArea.setText(allScores.toString());
        } catch (IOException e) {
            scoreArea.setText("Skor dosyası bulunamadı veya okunamadı.");
        }
    }

    private void loadScores(String username) {
//    try (BufferedReader reader = new BufferedReader(new FileReader("score.txt"))) {
//        String line;
//        while ((line = reader.readLine()) != null) {
//            scoreArea.append(line + "\n");
//        }
//    } catch (IOException e) {
//        scoreArea.setText("Skor dosyası bulunamadı veya okunamadı.");
//    }

        BinarySearchTree<Score> bst = new BinarySearchTree<>();

        try (BufferedReader reader = new BufferedReader(new FileReader("score.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length != 3) {
                    continue;
                }

                String fileUsername = parts[0].trim();
                String level = parts[1].trim();
                int score = Integer.parseInt(parts[2].trim());

                if (fileUsername.equals(username)) {
                    bst.insert(new Score(score, level, fileUsername));
                }
            }

            if (bst.getRoot() == null) {
                scoreArea.setText("Bu kullanıcıya ait skor bulunamadı.");
                return;
            }

            ArrayList<Score> scores = new ArrayList<>();
            bst.inorder(bst.getRoot(), scores);

            StringBuilder sb = new StringBuilder();
            sb.append("Kullanıcı: ").append(username).append("\n");
            sb.append("Skorlar (küçükten büyüğe):\n");

            for (Score s : scores) {
                sb.append(" • ").append(s.toString()).append("\n");
            }

            Score min = bst.min();
            Score max = bst.max();

            sb.append("\nEn düşük skor: ").append(min.score).append(" (level ").append(min.level).append(")\n");
            sb.append("En yüksek skor: ").append(max.score).append(" (level ").append(max.level).append(")\n");

            scoreArea.setText(sb.toString());

        } catch (IOException e) {
            scoreArea.setText("Skor dosyası okunamadı: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scoreArea = new javax.swing.JTextArea();
        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(835, 480));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 50));

        scoreArea.setEditable(false);
        scoreArea.setBackground(new java.awt.Color(255, 243, 217));
        scoreArea.setColumns(20);
        scoreArea.setRows(5);
        jScrollPane1.setViewportView(scoreArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 490, 290));

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 410, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/treasurehauntadventure/scoreboard.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setPreferredSize(new java.awt.Dimension(835, 480));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:

        Menu MenuFrame = new Menu();
        MenuFrame.setVisible(true);
        MenuFrame.pack();
        MenuFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:

        String username = JOptionPane.showInputDialog(this, "Skorlarını filtrelemek istediğiniz kullanıcı adını girin");
        if (username != null && !username.trim().isEmpty()) {
            loadScores(username.trim());
        }
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scoreboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea scoreArea;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
